class Solution {
public:
    bool isPalindrome(ListNode* head) {
        ListNode* slow= head;
        ListNode* fast= head;
        while(fast->next!=NULL && fast->next->next!=NULL){
            slow=slow->next;
            fast= fast->next->next;
         }
         ListNode* newhead= reverse(slow->next);
         ListNode* first= head;
         ListNode* second= newhead;
         while(second!=NULL){
            if(first->val!= second->val){
                reverse(newhead);
                return false;
            }
            first=first->next;
            second=second->next;
         }
         reverse(newhead);
         return true;
        
    }
    ListNode* reverse(ListNode* head){
        ListNode* curr= head;
        ListNode* prev=NULL;
        ListNode* next=head;
        while(curr!=NULL){
            next=curr->next;
            curr->next=prev;
            prev=curr;
            curr=next;
        }
        return prev;
    }
};
